---
# Source: sap-btp-operator/templates/configmap.yml
apiVersion: v1
data:
  CLUSTER_ID: 6636b432-ac35-4a58-9a27-9d4c0ac0f038
  MANAGEMENT_NAMESPACE: kyma-system
  RELEASE_NAMESPACE: kyma-system
  ALLOW_CLUSTER_ACCESS: "true"
kind: ConfigMap
metadata:
  name: sap-btp-operator-config
  namespace: kyma-system
---
# Source: sap-btp-operator/templates/crd.yml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: servicebindings.services.cloud.sap.com
spec:
  group: services.cloud.sap.com
  names:
    kind: ServiceBinding
    listKind: ServiceBindingList
    plural: servicebindings
    singular: servicebinding
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.serviceInstanceName
          name: Instance
          type: string
        - jsonPath: .status.conditions[0].reason
          name: Status
          type: string
        - jsonPath: .status.ready
          name: Ready
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.bindingID
          name: ID
          priority: 1
          type: string
        - jsonPath: .status.conditions[0].message
          name: Message
          priority: 1
          type: string
      name: v1
      schema:
        openAPIV3Schema:
          description: ServiceBinding is the Schema for the servicebindings API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ServiceBindingSpec defines the desired state of ServiceBinding
              properties:
                credentialsRotationPolicy:
                  description: CredentialsRotationPolicy holds automatic credentials rotation configuration.
                  properties:
                    enabled:
                      type: boolean
                    rotatedBindingTTL:
                      description: For how long to keep the rotated binding.
                      type: string
                    rotationFrequency:
                      description: What frequency to perform binding rotation.
                      type: string
                  required:
                    - enabled
                  type: object
                externalName:
                  description: The name of the binding in Service Manager
                  type: string
                parameters:
                  description: "Parameters for the binding. \n The Parameters field is NOT secret or secured in any way and should NEVER be used to hold sensitive information. To set parameters that contain secret information, you should ALWAYS store that information in a Secret and use the ParametersFrom field."
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                parametersFrom:
                  description: List of sources to populate parameters. If a top-level parameter name exists in multiples sources among `Parameters` and `ParametersFrom` fields, it is considered to be a user error in the specification
                  items:
                    description: ParametersFromSource represents the source of a set of Parameters
                    properties:
                      secretKeyRef:
                        description: The Secret key to select from. The value must be a JSON object.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must be a valid secret key.
                            type: string
                          name:
                            description: The name of the secret in the pod's namespace to select from.
                            type: string
                        required:
                          - key
                          - name
                        type: object
                    type: object
                  type: array
                secretKey:
                  description: SecretKey is used as the key inside the secret to store the credentials returned by the broker encoded as json to support complex data structures. If not specified, the credentials returned by the broker will be used directly as the secrets data.
                  type: string
                secretName:
                  description: SecretName is the name of the secret where credentials will be stored
                  type: string
                secretRootKey:
                  description: SecretRootKey is used as the key inside the secret to store all binding data including credentials returned by the broker and additional info under single key. Convenient way to store whole binding data in single file when using `volumeMounts`.
                  type: string
                serviceInstanceName:
                  description: The k8s name of the service instance to bind, should be in the namespace of the binding
                  minLength: 1
                  type: string
                userInfo:
                  description: UserInfo contains information about the user that last modified this instance. This field is set by the API server and not settable by the end-user. User-provided values for this field are not saved.
                  properties:
                    extra:
                      additionalProperties:
                        description: ExtraValue masks the value so protobuf can generate
                        items:
                          type: string
                        type: array
                      description: Any additional information provided by the authenticator.
                      type: object
                    groups:
                      description: The names of groups this user is a part of.
                      items:
                        type: string
                      type: array
                    uid:
                      description: A unique value that identifies this user across time. If this user is deleted and another user by the same name is added, they will have different UIDs.
                      type: string
                    username:
                      description: The name that uniquely identifies this user among all active users.
                      type: string
                  type: object
              required:
                - serviceInstanceName
              type: object
            status:
              description: ServiceBindingStatus defines the observed state of ServiceBinding
              properties:
                bindingID:
                  description: The generated ID of the binding, will be automatically filled once the binding is created
                  type: string
                conditions:
                  description: Service binding conditions
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                instanceID:
                  description: The ID of the instance in SM associated with binding
                  type: string
                lastCredentialsRotationTime:
                  description: Indicates when binding secret was rotated
                  format: date-time
                  type: string
                observedGeneration:
                  description: Last generation that was acted on
                  format: int64
                  type: integer
                operationType:
                  description: The operation type (CREATE/UPDATE/DELETE) for ongoing operation
                  type: string
                operationURL:
                  description: URL of ongoing operation for the service binding
                  type: string
                ready:
                  description: Indicates whether binding is ready for usage
                  type: string
              required:
                - conditions
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .spec.serviceInstanceName
          name: Instance
          type: string
        - jsonPath: .status.conditions[0].reason
          name: Status
          type: string
        - jsonPath: .status.ready
          name: Ready
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.bindingID
          name: ID
          priority: 1
          type: string
        - jsonPath: .status.conditions[0].message
          name: Message
          priority: 1
          type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: ServiceBinding is the Schema for the servicebindings API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ServiceBindingSpec defines the desired state of ServiceBinding
              properties:
                credentialsRotationPolicy:
                  description: CredentialsRotationPolicy holds automatic credentials rotation configuration.
                  properties:
                    enabled:
                      type: boolean
                    rotatedBindingTTL:
                      description: For how long to keep the rotated binding.
                      type: string
                    rotationFrequency:
                      description: What frequency to perform binding rotation.
                      type: string
                  required:
                    - enabled
                  type: object
                externalName:
                  description: The name of the binding in Service Manager
                  type: string
                parameters:
                  description: "Parameters for the binding. \n The Parameters field is NOT secret or secured in any way and should NEVER be used to hold sensitive information. To set parameters that contain secret information, you should ALWAYS store that information in a Secret and use the ParametersFrom field."
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                parametersFrom:
                  description: List of sources to populate parameters. If a top-level parameter name exists in multiples sources among `Parameters` and `ParametersFrom` fields, it is considered to be a user error in the specification
                  items:
                    description: ParametersFromSource represents the source of a set of Parameters
                    properties:
                      secretKeyRef:
                        description: The Secret key to select from. The value must be a JSON object.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must be a valid secret key.
                            type: string
                          name:
                            description: The name of the secret in the pod's namespace to select from.
                            type: string
                        required:
                          - key
                          - name
                        type: object
                    type: object
                  type: array
                secretKey:
                  description: SecretKey is used as the key inside the secret to store the credentials returned by the broker encoded as json to support complex data structures. If not specified, the credentials returned by the broker will be used directly as the secrets data.
                  type: string
                secretName:
                  description: SecretName is the name of the secret where credentials will be stored
                  type: string
                secretRootKey:
                  description: SecretRootKey is used as the key inside the secret to store all binding data including credentials returned by the broker and additional info under single key. Convenient way to store whole binding data in single file when using `volumeMounts`.
                  type: string
                serviceInstanceName:
                  description: The k8s name of the service instance to bind, should be in the namespace of the binding
                  minLength: 1
                  type: string
                userInfo:
                  description: UserInfo contains information about the user that last modified this instance. This field is set by the API server and not settable by the end-user. User-provided values for this field are not saved.
                  properties:
                    extra:
                      additionalProperties:
                        description: ExtraValue masks the value so protobuf can generate
                        items:
                          type: string
                        type: array
                      description: Any additional information provided by the authenticator.
                      type: object
                    groups:
                      description: The names of groups this user is a part of.
                      items:
                        type: string
                      type: array
                    uid:
                      description: A unique value that identifies this user across time. If this user is deleted and another user by the same name is added, they will have different UIDs.
                      type: string
                    username:
                      description: The name that uniquely identifies this user among all active users.
                      type: string
                  type: object
              required:
                - serviceInstanceName
              type: object
            status:
              description: ServiceBindingStatus defines the observed state of ServiceBinding
              properties:
                bindingID:
                  description: The generated ID of the binding, will be automatically filled once the binding is created
                  type: string
                conditions:
                  description: Service binding conditions
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                instanceID:
                  description: The ID of the instance in SM associated with binding
                  type: string
                lastCredentialsRotationTime:
                  description: Indicates when binding secret was rotated
                  format: date-time
                  type: string
                observedGeneration:
                  description: Last generation that was acted on
                  format: int64
                  type: integer
                operationType:
                  description: The operation type (CREATE/UPDATE/DELETE) for ongoing operation
                  type: string
                operationURL:
                  description: URL of ongoing operation for the service binding
                  type: string
                ready:
                  description: Indicates whether binding is ready for usage
                  type: string
              required:
                - conditions
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
---
# Source: sap-btp-operator/templates/crd.yml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: serviceinstances.services.cloud.sap.com
spec:
  group: services.cloud.sap.com
  names:
    kind: ServiceInstance
    listKind: ServiceInstanceList
    plural: serviceinstances
    singular: serviceinstance
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.serviceOfferingName
          name: Offering
          type: string
        - jsonPath: .spec.servicePlanName
          name: Plan
          type: string
        - jsonPath: .status.conditions[0].reason
          name: Status
          type: string
        - jsonPath: .status.ready
          name: Ready
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.instanceID
          name: ID
          priority: 1
          type: string
        - jsonPath: .status.conditions[0].message
          name: Message
          priority: 1
          type: string
      name: v1
      schema:
        openAPIV3Schema:
          description: ServiceInstance is the Schema for the serviceinstances API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ServiceInstanceSpec defines the desired state of ServiceInstance
              properties:
                customTags:
                  description: List of custom tags describing the ServiceInstance, will be copied to `ServiceBinding` secret in the key called `tags`.
                  items:
                    type: string
                  type: array
                externalName:
                  description: The name of the instance in Service Manager
                  type: string
                parameters:
                  description: "Provisioning parameters for the instance. \n The Parameters field is NOT secret or secured in any way and should NEVER be used to hold sensitive information. To set parameters that contain secret information, you should ALWAYS store that information in a Secret and use the ParametersFrom field."
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                parametersFrom:
                  description: List of sources to populate parameters. If a top-level parameter name exists in multiples sources among `Parameters` and `ParametersFrom` fields, it is considered to be a user error in the specification
                  items:
                    description: ParametersFromSource represents the source of a set of Parameters
                    properties:
                      secretKeyRef:
                        description: The Secret key to select from. The value must be a JSON object.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must be a valid secret key.
                            type: string
                          name:
                            description: The name of the secret in the pod's namespace to select from.
                            type: string
                        required:
                          - key
                          - name
                        type: object
                    type: object
                  type: array
                serviceOfferingName:
                  description: The name of the service offering
                  minLength: 1
                  type: string
                servicePlanID:
                  description: The plan ID in case service offering and plan name are ambiguous
                  type: string
                servicePlanName:
                  description: The name of the service plan
                  minLength: 1
                  type: string
                userInfo:
                  description: UserInfo contains information about the user that last modified this instance. This field is set by the API server and not settable by the end-user. User-provided values for this field are not saved.
                  properties:
                    extra:
                      additionalProperties:
                        description: ExtraValue masks the value so protobuf can generate
                        items:
                          type: string
                        type: array
                      description: Any additional information provided by the authenticator.
                      type: object
                    groups:
                      description: The names of groups this user is a part of.
                      items:
                        type: string
                      type: array
                    uid:
                      description: A unique value that identifies this user across time. If this user is deleted and another user by the same name is added, they will have different UIDs.
                      type: string
                    username:
                      description: The name that uniquely identifies this user among all active users.
                      type: string
                  type: object
              required:
                - serviceOfferingName
                - servicePlanName
              type: object
            status:
              description: ServiceInstanceStatus defines the observed state of ServiceInstance
              properties:
                conditions:
                  description: Service instance conditions
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                instanceID:
                  description: The generated ID of the instance, will be automatically filled once the instance is created
                  type: string
                observedGeneration:
                  description: Last generation that was acted on
                  format: int64
                  type: integer
                operationType:
                  description: The operation type (CREATE/UPDATE/DELETE) for ongoing operation
                  type: string
                operationURL:
                  description: URL of ongoing operation for the service instance
                  type: string
                ready:
                  description: Indicates whether instance is ready for usage
                  type: string
                tags:
                  description: Tags describing the ServiceInstance as provided in service catalog, will be copied to `ServiceBinding` secret in the key called `tags`.
                  items:
                    type: string
                  type: array
              required:
                - conditions
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .spec.serviceOfferingName
          name: Offering
          type: string
        - jsonPath: .spec.servicePlanName
          name: Plan
          type: string
        - jsonPath: .status.conditions[0].reason
          name: Status
          type: string
        - jsonPath: .status.ready
          name: Ready
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.instanceID
          name: ID
          priority: 1
          type: string
        - jsonPath: .status.conditions[0].message
          name: Message
          priority: 1
          type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: ServiceInstance is the Schema for the serviceinstances API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ServiceInstanceSpec defines the desired state of ServiceInstance
              properties:
                customTags:
                  description: List of custom tags describing the ServiceInstance, will be copied to `ServiceBinding` secret in the key called `tags`.
                  items:
                    type: string
                  type: array
                externalName:
                  description: The name of the instance in Service Manager
                  type: string
                parameters:
                  description: "Provisioning parameters for the instance. \n The Parameters field is NOT secret or secured in any way and should NEVER be used to hold sensitive information. To set parameters that contain secret information, you should ALWAYS store that information in a Secret and use the ParametersFrom field."
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                parametersFrom:
                  description: List of sources to populate parameters. If a top-level parameter name exists in multiples sources among `Parameters` and `ParametersFrom` fields, it is considered to be a user error in the specification
                  items:
                    description: ParametersFromSource represents the source of a set of Parameters
                    properties:
                      secretKeyRef:
                        description: The Secret key to select from. The value must be a JSON object.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must be a valid secret key.
                            type: string
                          name:
                            description: The name of the secret in the pod's namespace to select from.
                            type: string
                        required:
                          - key
                          - name
                        type: object
                    type: object
                  type: array
                serviceOfferingName:
                  description: The name of the service offering
                  minLength: 1
                  type: string
                servicePlanID:
                  description: The plan ID in case service offering and plan name are ambiguous
                  type: string
                servicePlanName:
                  description: The name of the service plan
                  minLength: 1
                  type: string
                userInfo:
                  description: UserInfo contains information about the user that last modified this instance. This field is set by the API server and not settable by the end-user. User-provided values for this field are not saved.
                  properties:
                    extra:
                      additionalProperties:
                        description: ExtraValue masks the value so protobuf can generate
                        items:
                          type: string
                        type: array
                      description: Any additional information provided by the authenticator.
                      type: object
                    groups:
                      description: The names of groups this user is a part of.
                      items:
                        type: string
                      type: array
                    uid:
                      description: A unique value that identifies this user across time. If this user is deleted and another user by the same name is added, they will have different UIDs.
                      type: string
                    username:
                      description: The name that uniquely identifies this user among all active users.
                      type: string
                  type: object
              required:
                - serviceOfferingName
                - servicePlanName
              type: object
            status:
              description: ServiceInstanceStatus defines the observed state of ServiceInstance
              properties:
                conditions:
                  description: Service instance conditions
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                instanceID:
                  description: The generated ID of the instance, will be automatically filled once the instance is created
                  type: string
                observedGeneration:
                  description: Last generation that was acted on
                  format: int64
                  type: integer
                operationType:
                  description: The operation type (CREATE/UPDATE/DELETE) for ongoing operation
                  type: string
                operationURL:
                  description: URL of ongoing operation for the service instance
                  type: string
                ready:
                  description: Indicates whether instance is ready for usage
                  type: string
                tags:
                  description: Tags describing the ServiceInstance as provided in service catalog, will be copied to `ServiceBinding` secret in the key called `tags`.
                  items:
                    type: string
                  type: array
              required:
                - conditions
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
---
# Source: sap-btp-operator/templates/deployment.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
    app.kubernetes.io/instance: sap-btp-operator
    app.kubernetes.io/name: sap-btp-operator
  name: sap-btp-operator-controller-manager
  namespace: kyma-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
      app.kubernetes.io/instance: sap-btp-operator
      app.kubernetes.io/name: sap-btp-operator
  template:
    metadata:
      annotations:
        checksum/config: ccb915e5e1ba7ad275006bfa1f594231561c25eed88ed08cb425e0e4bf3eecf6
        sidecar.istio.io/inject: "false"
      labels:
        control-plane: controller-manager
        app.kubernetes.io/instance: sap-btp-operator
        app.kubernetes.io/name: sap-btp-operator
    spec:
      containers:
        - args:
            - --secure-listen-address=0.0.0.0:8443
            - --upstream=http://127.0.0.1:8080/
            - --logtostderr=true
            - --v=10
          image: "quay.io/brancz/kube-rbac-proxy:v0.11.0"
          name: kube-rbac-proxy
          resources:
            limits:
            requests:
          ports:
            - containerPort: 8443
              name: https
        - args:
            - --metrics-addr=127.0.0.1:8080
          command:
            - /manager
          envFrom:
            - configMapRef:
                name: sap-btp-operator-config
          image: "ghcr.io/sap/sap-btp-service-operator/controller:v0.3.6"
          imagePullPolicy: IfNotPresent
          name: manager
          ports:
            - containerPort: 9443
              name: webhook-server
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            limits:
              cpu: 250m
              memory: 200Mi
            requests:
              cpu: 10m
              memory: 20Mi
          volumeMounts:
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: cert
              readOnly: true
      terminationGracePeriodSeconds: 10
      volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: webhook-server-cert
---
# Source: sap-btp-operator/templates/rbac.yml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: sap-btp-operator-manager-role
rules:
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - get
      - list
      - update
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - services.cloud.sap.com
    resources:
      - servicebindings
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - services.cloud.sap.com
    resources:
      - servicebindings/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - services.cloud.sap.com
    resources:
      - serviceinstances
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - services.cloud.sap.com
    resources:
      - serviceinstances/status
    verbs:
      - get
      - patch
      - update
---
# Source: sap-btp-operator/templates/rbac.yml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: sap-btp-operator-metrics-reader
rules:
  - nonResourceURLs:
      - /metrics
    verbs:
      - get
---
# Source: sap-btp-operator/templates/rbac.yml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: sap-btp-operator-proxy-role
rules:
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
---
# Source: sap-btp-operator/templates/rbac.yml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: sap-btp-operator-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: sap-btp-operator-proxy-role
subjects:
  - kind: ServiceAccount
    name: default
    namespace: kyma-system
---
# Source: sap-btp-operator/templates/rbac.yml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: sap-btp-operator-manager-rolebinding
  namespace: kyma-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: sap-btp-operator-manager-role
subjects:
  - kind: ServiceAccount
    name: default
    namespace: kyma-system
---
# Source: sap-btp-operator/templates/rbac.yml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: sap-btp-operator-leader-election-role
  namespace: kyma-system
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - configmaps/status
    verbs:
      - get
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
---
# Source: sap-btp-operator/templates/rbac.yml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: sap-btp-operator-leader-election-rolebinding
  namespace: kyma-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: sap-btp-operator-leader-election-role
subjects:
  - kind: ServiceAccount
    name: default
    namespace: kyma-system
---
# Source: sap-btp-operator/templates/secret.yml
apiVersion: v1
kind: Secret
metadata:
  name: sap-btp-service-operator
  namespace: kyma-system
type: Opaque
data:
  clientid: ""
  sm_url: ""
  tokenurl: ""
  tokenurlsuffix: "L29hdXRoL3Rva2Vu"
---
# Source: sap-btp-operator/templates/service.yml
apiVersion: v1
kind: Service
metadata:
  name: sap-btp-operator-webhook-service
  namespace: kyma-system
spec:
  ports:
    - name: webhook-server
      port: 443
      targetPort: webhook-server
  selector:
    control-plane: controller-manager
    app.kubernetes.io/instance: sap-btp-operator
    app.kubernetes.io/name: sap-btp-operator
---
# Source: sap-btp-operator/templates/service.yml
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
    app.kubernetes.io/instance: sap-btp-operator
    app.kubernetes.io/name: sap-btp-operator
  name: sap-btp-operator-controller-manager-metrics-service
  namespace: kyma-system
spec:
  ports:
    - name: https
      port: 8443
      targetPort: https
  selector:
    control-plane: controller-manager
    app.kubernetes.io/instance: sap-btp-operator
    app.kubernetes.io/name: sap-btp-operator
---
# Source: sap-btp-operator/templates/webhook.yml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: sap-btp-operator-mutating-webhook-configuration
webhooks:
  - admissionReviewVersions:
      - v1beta1
      - v1
    clientConfig:
      service:
        name: sap-btp-operator-webhook-service
        namespace: kyma-system
        path: /mutate-services-cloud-sap-com-v1-servicebinding
    failurePolicy: Fail
    name: mservicebinding.kb.io
    rules:
      - apiGroups:
          - services.cloud.sap.com
        apiVersions:
          - v1
        operations:
          - CREATE
          - UPDATE
        resources:
          - servicebindings
    sideEffects: None
  - admissionReviewVersions:
      - v1beta1
      - v1
    clientConfig:
      service:
        name: sap-btp-operator-webhook-service
        namespace: kyma-system
        path: /mutate-services-cloud-sap-com-v1-serviceinstance
    failurePolicy: Fail
    name: mserviceinstance.kb.io
    rules:
      - apiGroups:
          - services.cloud.sap.com
        apiVersions:
          - v1
        operations:
          - CREATE
          - UPDATE
        resources:
          - serviceinstances
    sideEffects: None
---
# Source: sap-btp-operator/templates/webhook.yml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: sap-btp-operator-validating-webhook-configuration
webhooks:
  - admissionReviewVersions:
      - v1beta1
      - v1
    clientConfig:
      service:
        name: sap-btp-operator-webhook-service
        namespace: kyma-system
        path: /validate-services-cloud-sap-com-v1-servicebinding
    failurePolicy: Fail
    name: vservicebinding.kb.io
    rules:
      - apiGroups:
          - services.cloud.sap.com
        apiVersions:
          - v1
        operations:
          - CREATE
          - UPDATE
        resources:
          - servicebindings
    sideEffects: None
