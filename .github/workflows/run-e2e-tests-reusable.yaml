# Call this workflow from other jobs to execute e2e tests

name: Run E2E tests on the cluster (reusable)

on:
  workflow_call:
    inputs:
      image-repo:
        description: Binary image registry reference
        required: true
        type: string
      image-tag:
        description: Binary image tag
        required: true
        type: string
      credentials-mode:
        description: real or dummy credentials
        required: true
        type: string
      last-k3s-versions:
        description: number of the most recent K3s versions to be used
        required: false
        default: 1
        type: string

jobs:
  prepare-tests:
    # job waits until Prow job uploads docker image
    runs-on: ubuntu-latest
    outputs:
      versions: ${{ steps.get-versions.outputs.k3s_versions }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - id: get-versions
        name: Get K3s versions
        # prepare json representing GitHub matrix:
        # {"include": [
        #    {"version":"v1.26.10+k3s1"},
        #      ...
        #    {"version":"v1.28.3+k3s1"}
        # ]
        # }
        run: |
          VERSIONS=($(./scripts/testing/get-latest-k3s-releases.sh ${{ inputs.last-k3s-versions }}))
          MATRIX_AS_JSON=$(echo ${VERSIONS[*]} | awk 'END {printf "{\"include\":[";for (i = 1; i < NF; i++) printf "{\"version\":%s},",$i;printf "{\"version\":%s}]}",$i }'|jq -c)
          echo "k3s_versions=${MATRIX_AS_JSON}" >> "${GITHUB_OUTPUT}"

      - name: Wait for artifacts
        env:
          IMAGE_REPO: ${{ inputs.image-repo }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: "./scripts/await_image.sh ${{ inputs.image-tag }}"

  run-e2e-matrix:
    runs-on: ubuntu-latest
    needs: prepare-tests
    timeout-minutes: 5
    strategy:
      matrix: ${{ fromJSON(needs.prepare-tests.outputs.versions) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Prepare K3s cluster and docker registry
        run: "./scripts/testing/k3s-setup.sh ${{ matrix.version }} --wait"

      - name: Set up go environment
        uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'

      - name: Install BTP operator
        env:
          SM_CLIENT_ID: ${{ secrets.CLIENT_ID }}
          SM_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          SM_URL: ${{ secrets.SM_URL }}
          SM_TOKEN_URL: ${{ secrets.TOKENURL }}
        run: "./scripts/testing/install_module.sh ${{ inputs.image-repo }}:${{ inputs.image-tag }} ${{ inputs.credentials-mode }} ci"

      - name: Run tests
        run: "./scripts/testing/run_e2e_module_tests.sh ${{ inputs.credentials-mode }} ci"

