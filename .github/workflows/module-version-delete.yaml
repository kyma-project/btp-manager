name: Delete module version from module-manifests repository
#  Workflow requires following variables to be defined
#     DOC_URL - location of btp-manager documentation
#     GIT_USER_NAME - user creating head branch and PR
#     GIT_USER_EMAIL - this user email
#     GH_TOOLS_HOST - tools host
#     IMAGE_REPO - name of binary image of the btp-manager executable
#     MODULE_MANIFESTS_REPO_NAME - repository of modules manifests

env:

  # DO NOT CHANGE THIS VALUE - the change will cause inconsistency on landscapes
  # since there would be "old-named" and "new-named" modules and LM would switch between those infinitely
  FULL_MODULE_NAME: kyma-project.io/module/btp-operator

  # GitHub repositories
  MODULE_MANIFESTS_WITH_USER:  "https://${{ vars.GIT_USER_NAME }}:${{ secrets.BOT_TOKEN_GITHUB_TOOLS }}@${{ vars.GH_TOOLS_HOST }}/kyma/${{ vars.MODULE_MANIFESTS_REPO_NAME }}.git"

  BTP_MANAGER_API_URL: "https://api.github.com/repos/kyma-project/btp-manager"
  BTP_MANAGER_RELEASES_URL: "https://github.com/kyma-project/btp-manager/releases"

  BTP_MANAGER_REPO: "kyma-project/btp-manager"

  # File names
  MODULE_CONFIG_FILENAME: module-config.yaml

  # needed by gh cli for GitHub enterprise
  GH_ENTERPRISE_TOKEN: ${{ secrets.BOT_TOKEN_GITHUB_TOOLS }}

  # needed by gh cli for local repo
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

on:
  workflow_dispatch:
    inputs:
      releaseTag:
        description: "Module version"
        required: true

jobs:
  promote:
    runs-on: ubuntu-latest

    steps:
      - name: Validate required environment variables
        shell: bash
        run: |
          [ -z "${{ vars.DOC_URL }}" ] && echo "DOC_URL is required" && exit 1 
          [ -z "${{ vars.GIT_USER_EMAIL }}" ] && echo "GIT_USER_EMAIL is required" && exit 1 
          [ -z "${{ vars.GIT_USER_NAME }}" ] && echo "GIT_USER_NAME is required" && exit 1 
          [ -z "${{ vars.GH_TOOLS_HOST }}" ] && echo "GH_TOOLS_HOST is required" && exit 1 
          [ -z "${{ vars.IMAGE_REPO }}" ] && echo "IMAGE_REPO is required" && exit 1 
          [ -z "${{ vars.MODULE_MANIFESTS_REPO_NAME }}" ] && echo "MODULE_MANIFESTS_REPO_NAME is required" && exit 1 
          echo "Validated"

      - name: Validate given release tag
        shell: bash
        run: |
          echo "Validating given release tag: ${{ inputs.releaseTag }}" | tee $GITHUB_STEP_SUMMARY
          release_info=$(gh release view --repo $BTP_MANAGER_REPO ${{ inputs.releaseTag }})      
          if [ $? -eq 0 ]; then
              echo "TAG=${{ inputs.releaseTag }}" >> $GITHUB_ENV
              echo "Removing module version: ${latest_release}"| tee $GITHUB_STEP_SUMMARY
          else
              echo "Module version not found among release tags: ${{ inputs.releaseTag }}" | tee $GITHUB_STEP_SUMMARY
              exit 1  
          fi
      - name: Set branch name
        run: echo "BRANCH_NAME=btp-manager-module-removal-${TAG}" >> $GITHUB_ENV

      - name: Setup git and clone repo
        run: |
          git config --global user.email ${{ vars.GIT_USER_EMAIL }}
          git config --global user.name ${{ vars.GIT_USER_NAME }}
          git clone ${MODULE_MANIFESTS_WITH_USER}
        env:
          GH_TOKEN: ${{ secrets.BOT_TOKEN_GITHUB_TOOLS }}

      - name: Sync Repo and create branch
        working-directory: module-manifests
        run: |
          git remote add upstream ${MODULE_MANIFESTS_WITH_USER}
          git fetch upstream
          git merge upstream/main
          git checkout -B ${BRANCH_NAME}
          mkdir -p modules/btp-operator/${TAG}

      - name: Remove module version
        working-directory: module-manifests/modules/btp-operator
        run: |
          echo "Removing module version config: ${TAG}/${MODULE_CONFIG_FILENAME}" | tee $GITHUB_STEP_SUMMARY
          rm -rf ${TAG}/${MODULE_CONFIG_FILENAME}

      - name: Commit and push changes
        working-directory: module-manifests
        env:
          FORK_ORIGIN: "https://${{ vars.GIT_USER_NAME }}:${{ secrets.BOT_TOKEN_GITHUB_TOOLS }}@${{ vars.GH_TOOLS_HOST }}/${{ vars.GIT_USER_NAME }}/${{ vars.MODULE_MANIFESTS_REPO_NAME }}.git"
        run: |
          git commit -m "removal of module version ${TAG} from module-manifests repository"
          git remote set-url origin ${FORK_ORIGIN}
          git push --set-upstream origin ${BRANCH_NAME} -f

      - name: Create PR if needed
        working-directory: module-manifests
        shell: bash
        env:
          MODULE_MANIFESTS_REPO_URL: "https://${{ vars.GH_TOOLS_HOST }}/kyma/${{ vars.MODULE_MANIFESTS_REPO_NAME }}"
        run: |
          prs=$(gh pr list -R "${MODULE_MANIFESTS_REPO_URL}" -A ${{ vars.GIT_USER_NAME }} --state open --json headRefName | jq -r '.[] | .headRefName')

          if  echo $prs | tr " " '\n' | grep -F -q -x ${BRANCH_NAME}; then
              echo "opened PR already exists, no need to create new one, PR will be updated by push from previous step"
              exit 0
          fi
          gh pr create -B main -H ${{ vars.GIT_USER_NAME }}:${BRANCH_NAME} -R https://github.tools.sap/kyma/module-manifests/ --title "Remove BTP Manager version ${TAG}" --fill --body "${BTP_MANAGER_RELEASES_URL}/${TAG}/${MODULE_CONFIG_FILENAME}" | tee $GITHUB_STEP_SUMMARY

          
          
