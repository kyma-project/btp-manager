#  This GitHub action is designed to run end-to-end (e2e) tests on a Kubernetes cluster using the k3s distribution.
#  The action is triggered on pull requests to the main branch of the repository.
#  The action consists of a single job that runs on an Ubuntu-latest virtual machine and has the necessary permissions to read and write various resources.
#  The job has several steps:
#    - Checkout the repository code.
#    - Cache the ~/.cache/go-build and ~/go/pkg/mod directories to improve performance.
#    - Set up a docker registry and k3s cluster using a script called k3s-setup.sh.
#    - Set the pull request number, OCI module image name as environment variables.
#    - Wait until the registry contains OCI module image for current PR (pushed by prow-job)
#    - Run test script located in the testing directory

name: Run E2E tests on k3s cluster

env:
  BTP_OPERATOR_DEV_REPO: europe-docker.pkg.dev/kyma-project/dev/unsigned/component-descriptors/kyma.project.io/module/btp-operator
  BTP_MANAGER_DEV_REPO: europe-docker.pkg.dev/kyma-project/dev/btp-manager
  TAG_PREFIX: 0.0.0

on:
  pull_request:
    branches: [ main ]

jobs:
  run-e2e-tests:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
        
      - name: Prepare k3s cluster
        run: |
            ./testing/k3s-setup.sh
            while [[ $(kubectl get nodes -o 'jsonpath={..status.conditions[?(@.type=="Ready")].status}') != "True" ]];
            do echo "Waiting for cluster nodes to be ready"; sleep 1; done

      - name: Prepare environment variables
        run: |
          PR_NAME=PR-${{ github.event.number }}
          TAG_NAME=v${TAG_PREFIX}-${PR_NAME}
          echo "PR_NAME=${PR_NAME}" >> $GITHUB_ENV
          echo "TAG_NAME=${TAG_NAME}" >> $GITHUB_ENV
          echo "MODULE_IMAGE_NAME=${BTP_OPERATOR_DEV_REPO}:${TAG_NAME}" >> $GITHUB_ENV

      - name: Wait for the btp-manager binary image
        run: |
          while [ ! $(skopeo list-tags docker://${BTP_MANAGER_DEV_REPO} | jq '.Tags|any(. == env.PR_NAME)') ]
          do echo "Waiting for btp-operator image: ${BTP_MANAGER_DEV_REPO}:${PR_NAME}"; sleep 10; done
          echo "BTP-manager binary image found"

      - name: Wait for the btp-operator module image
        run: |
          while [ ! $(skopeo list-tags docker://${BTP_OPERATOR_DEV_REPO} | jq '.Tags|any(. == env.TAG_NAME)') ]
          do echo "Waiting for btp-operator module image: ${BTP_OPERATOR_DEV_REPO}:${TAG_NAME}"; sleep 10; done
          echo "BTP-operator module image found"

      - uses: actions/setup-go@v3
        with:
          go-version: '>=1.19.0'
          check-latest: true

      - name: Run tests
        run: ./scripts/testing/run_e2e_module_tests.sh ${MODULE_IMAGE_NAME} ci