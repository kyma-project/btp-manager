name: e2e-test-k3s

on:
 push:
   branches: [ "main" ]
   # Publish semver tags as releases.
   tags: [ 'v*.*.*' ]
 pull_request:
    branches: [ main ]
    paths:
        - operator/**

jobs:
  run-e2e-tests:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
            
      # Enable tmate debugging of manually-triggered workflows if the input option was provided
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ inputs.debug_enabled }}
        
      - name: Prepare docker registry and k3s cluster
        run: |
            chmod +x ./testing/k3s-setup.sh
            ./testing/k3s-setup.sh
            while [[ $(kubectl get nodes -o 'jsonpath={..status.conditions[?(@.type=="Ready")].status}') != "True" ]];
            do echo "Waiting for cluster nodes to be ready"; sleep 1; done
      - name: Generate and install manifests
        run: |
            make -C operator manifests
            make -C operator install           
            
      - name: install prometheus-operator
        run: |
            kubectl apply -f https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/main/bundle.yaml --force-conflicts=true --server-side
            
      - name: Deploy controller
        continue-on-error: true
        run: |
            make -C operator deploy IMG="europe-docker.pkg.dev/kyma-project/dev/btp-manager/operator:PR-${{ github.event.number }}"

      - name: kubectl get deployment -A
        run: |
            kubectl get deployment -A
         
            
      - uses: actions/setup-go@v3
        with:
          go-version: '>=1.19.0'
          check-latest: true

      - name: Run E2E tests on k3s cluster
        run: |
           go version
           cd ./testing/go
           go mod tidy
           go test
