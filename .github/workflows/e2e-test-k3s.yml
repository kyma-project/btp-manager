#  This GitHub action is designed to run end-to-end (e2e) tests on a Kubernetes cluster using the k3s distribution.
#  The action is triggered on pull requests to the main branch of the repository that modify files within the "operator" directory.
#  The action consists of a single job that runs on an Ubuntu-latest virtual machine and has the necessary permissions to read and write various resources.
#  The job has several steps:
#    - Checkout the repository code.
#    - Cache the ~/.cache/go-build and ~/go/pkg/mod directories to improve performance.
#    - Set up a docker registry and k3s cluster using a script called k3s-setup.sh.
#    - Set the pull request number as an environment variable.
#    - Run Go tests located in the testing/go directory, ensuring that the correct version of Go is used and the Go modules are tidied up before the tests are run.
#
#  Overall, this action ensures that the code changes made in the pull request do not break any end-to-end tests on a k3s cluster.


name: e2e-test-k3s

on:
  pull_request:
    branches: [ main ]
    paths:
        - operator/**
jobs:
  run-e2e-tests:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
        
      - name: Prepare docker registry and k3s cluster
        run: |
            chmod +x ./testing/k3s-setup.sh
            ./testing/k3s-setup.sh
            while [[ $(kubectl get nodes -o 'jsonpath={..status.conditions[?(@.type=="Ready")].status}') != "True" ]];
            do echo "Waiting for cluster nodes to be ready"; sleep 1; done

      - name: Set PR number
        id: set_pr_number
        run: echo "PRNUMBER=${{ github.event.number }}" >> $GITHUB_ENV

      - uses: actions/setup-go@v3
        with:
          go-version: '>=1.19.0'
          check-latest: true

      - name: Run E2E tests on k3s cluster
        run: |
           go version
           cd ./testing/go
           go mod tidy
           go test -timeout 4m
