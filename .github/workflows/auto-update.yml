name: Auto update chart/resources

env:
  KYMA_BTP_MANAGER_REPO: ${{ github.repository_owner }}/btp-manager
  SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
  SAP_BTP_SERVICE_OPERATOR_REPO: https://github.com/sap/sap-btp-service-operator
  GIT_EMAIL: team-gopher+1@sap.com
  GIT_NAME: kyma-gopher-bot
  EXTERNAL_IMAGES_REPO: ${{ vars.EXTERNAL_IMAGES_REPO }}
on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *' 
permissions:
  contents: write
jobs:
  auto-update-chart-and-module-resources:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up go environment
        uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'

      - name: Compare tags
        run: |
          LATEST=$(scripts/update/get-latest-chart-version.sh)
          CURRENT=$(yq '.version' ./module-chart/chart/Chart.yaml)
          if [[ $LATEST == $CURRENT ]]; then
            echo "versions are the same: $LATEST=$CURRENT"
            echo "CONTINUE_JOB=false" >> $GITHUB_ENV
          else
            echo "version update from $CURRENT to $LATEST"
            echo "CONTINUE_JOB=true" >> $GITHUB_ENV
            echo "TAG=${LATEST}" >> $GITHUB_ENV
            echo "BASE_BRANCH_NAME=chart-${LATEST}" >> $GITHUB_ENV
          fi

      - name: Update chart
        if: env.CONTINUE_JOB == 'true'
        run: scripts/update/make-module-chart.sh $TAG
      
      - name: Update external images
        if: env.CONTINUE_JOB == 'true'
        run: scripts/update/update-external-images.sh

      - name: Create PR for image-syncer
        if: env.CONTINUE_JOB == 'true'
        env:
          GH_TOKEN: ${{ secrets.BOT_TOKEN }}
        run: |
          CHART_UPDATE_BRANCH_NAME=${BASE_BRANCH_NAME}-update-chart-and-external-images
          echo "CHART_UPDATE_BRANCH_NAME=${CHART_UPDATE_BRANCH_NAME}" >> $GITHUB_ENV
          MSG=Update module chart to ${TAG}
          PRS=$(gh pr list -A $GIT_NAME --state open --json headRefName | jq -r '.[] | .headRefName')
          if echo $PRS | tr " " '\n' | grep -F -q -x ${CHART_UPDATE_BRANCH_NAME}; then
            echo "PR already exists, no need to create a new one"
            echo "CHART_UPDATE_PR_NUMBER=$(gh pr list --search "base:main head:${CHART_UPDATE_BRANCH_NAME}" --json number | jq -r '.[] | .number')" >> $GITHUB_ENV
          elif [ -z "$(git status --porcelain)" ]; then
            echo "Nothing changed, no need to create PR"
            echo "CHART_UPDATE_PR_NUMBER=-1" >> $GITHUB_ENV
          else
            PR_STATUS=$(scripts/update/create_pr_module_chart.sh)
            echo "CHART_UPDATE_PR_NUMBER=$(echo "$PR_STATUS" | tail -n 1)" >> $GITHUB_ENV
          fi

      - name: Merge PR
        if: env.CONTINUE_JOB == 'true'
        env:
          GH_TOKEN: ${{ secrets.BOT_TOKEN }}
          REPOSITORY: ${{ env.KYMA_BTP_MANAGER_REPO }}
          PR_NUMBER: ${{ env.CHART_UPDATE_PR_NUMBER }}
        run: |
          if [ "$PR_NUMBER" -gt 0 ]; then
            scripts/merge_pr.sh
          else
            echo "Step skipped"
          fi
      
      - name: Await PR merge
        timeout-minutes: 5
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ env.CHART_UPDATE_PR_NUMBER }}
        run: |
          if [ "$PR_NUMBER" -gt 0 ]; then
            scripts/await_pr_merge.sh
            git push origin -d $CHART_UPDATE_BRANCH_NAME
          else
            echo "Step skipped"
          fi
      
      - name: Wait for sap-btp-service-operator image
        if: env.CONTINUE_JOB == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          EXTERNAL_IMAGE=$(yq '.images[] | select(.source | contains("sap-btp-service-operator")) | .source' external-images.yaml)
          scripts/await_image.sh "${EXTERNAL_IMAGES_REPO}/${EXTERNAL_IMAGE}"

      - name: Wait for kube-rbac-proxy image
        if: env.CONTINUE_JOB == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          EXTERNAL_IMAGE=$(yq '.images[] | select(.source | contains("kube-rbac-proxy")) | .source' external-images.yaml)
          scripts/await_image.sh "${EXTERNAL_IMAGES_REPO}/${EXTERNAL_IMAGE}"

      - name: Checkout code after chart update and external images sync
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: git pull
      
      - name: Update module resources
        if: env.CONTINUE_JOB == 'true'
        run: scripts/update/make-module-resources.sh $TAG

      - name: Set images as envs in module deployment
        if: env.CONTINUE_JOB == 'true'
        run: ./scripts/update/add_module_managed_images_envs.sh

      - name: Create PR for resources update
        if: env.CONTINUE_JOB == 'true'
        env:
          GH_TOKEN: ${{ secrets.BOT_TOKEN }}
        run: |
          RESOURCES_UPDATE_BRANCH_NAME=${BASE_BRANCH_NAME}-update-resources
          MSG=Update module resources to ${TAG}
          PRS=$(gh pr list -A $GIT_NAME --state open --json headRefName | jq -r '.[] | .headRefName')
          if echo $PRS | tr " " '\n' | grep -F -q -x $RESOURCES_UPDATE_BRANCH_NAME; then
            echo "PR already exists, no need to create a new one"
          elif [ -z "$(git status --porcelain)" ]; then
            echo "Nothing changed, no need to create PR"
          else
            scripts/update/create_pr_module_resources.sh
          fi

      - name: Notify slack channel about failure
        if: ${{ !success() && env.SLACK_BOT_TOKEN != ''}}
        uses: slackapi/slack-github-action@v1.24.0
        with:
          channel-id: 'kyma-gopher-private-alerts'
          slack-message: "Auto-update of BTP Manager has failed. Check the details at: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
