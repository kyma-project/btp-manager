name: "Create release"

env:
  MODULE_REPO: europe-docker.pkg.dev/kyma-project/prod/unsigned/component-descriptors/kyma.project.io/module/btp-operator
  IMAGE_REPO: europe-docker.pkg.dev/kyma-project/prod/btp-manager
on:
  workflow_dispatch:
    inputs:
      name:
        description: 'Create release'
        default: ""
        required: true
      credentials:
        type: choice
        description: SM credentials
        default: real
        options:
          - dummy
          - real

jobs:
  validate-release:
    name: Validate release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Validate Labels
        run : ./scripts/label_validator.sh "RELEASE"
  
  run-unit-tests:
    name: Unit tests
    needs: validate-release
    uses: "./.github/workflows/run-unit-tests-reusable.yaml"

  run-e2e-tests:
    name: E2E tests
    needs: run-unit-tests
    uses: "./.github/workflows/run-e2e-tests-reusable.yaml"
    secrets: inherit
    with:
      image-tag: ${{ github.event.inputs.name }}
      module-tag: v${{ github.event.inputs.name }}
      image-repo: europe-docker.pkg.dev/kyma-project/prod/btp-manager
      module-repo: europe-docker.pkg.dev/kyma-project/prod/unsigned/component-descriptors/kyma.project.io/module/btp-operator
      credentials-mode: ${{ github.event.inputs.credentials }}

  run-stress-tests:
    name: Stress tests
    needs: validate-release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Prepare k3s cluster and docker registry
        run: "./scripts/testing/k3s-setup.sh --wait"

      - name: Wait for artifacts
        env:
          BTP_OPERATOR_REPO: ${{ env.MODULE_REPO }}
          BTP_MANAGER_REPO: ${{ env.IMAGE_REPO }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: "./scripts/await_artifacts.sh ${{ inputs.name }} v${{ inputs.name }}"

      - name: Install BTP operator
        timeout-minutes: 2
        run: "./scripts/testing/install.sh $MODULE_REPO:v${{ inputs.name }} dummy ci"

      - name: BTP Manager controller resources usage
        run: "kubectl top pod -l app.kubernetes.io/component=btp-manager.kyma-project.io -n kyma-system --containers"

      - name: Run tests
        run: ./scripts/testing/./stress-mem.sh 500 30

      - name: Check BTP manager restarts
        run: "./scripts/testing/check_btp-manager_restarts.sh"

      - name: BTP Manager controller resources usage
        run: "kubectl top pod -l app.kubernetes.io/component=btp-manager.kyma-project.io -n kyma-system --containers"

      - name: Prepare stress data - Secrets and ConfigMaps
        run: "./scripts/testing/create-secrets-configmaps.sh 120"

      - name: BTP Manager controller resources usage
        run: "kubectl top pod -l app.kubernetes.io/component=btp-manager.kyma-project.io -n kyma-system --containers"

      - name: Check BTP manager restarts
        run: |
          sleep 15
          ./scripts/testing/check_btp-manager_restarts.sh

  run-e2e-upgrade-tests:
    name: E2E upgrade tests
    needs: run-unit-tests
    secrets: inherit
    if: ${{ inputs.credentials == 'real' }}
    uses: "./.github/workflows/run-e2e-upgrade-tests-reusable.yaml"
    with:
      image-tag: ${{ github.event.inputs.name }}
      module-tag: v${{ github.event.inputs.name }}
      image-repo: europe-docker.pkg.dev/kyma-project/prod/btp-manager
      module-repo: europe-docker.pkg.dev/kyma-project/prod/unsigned/component-descriptors/kyma.project.io/module/btp-operator

  create-draft:
    name: Create draft release
    needs: validate-release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Create draft release
        id: create-draft
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          RELEASE_ID=$(./scripts/create_draft_release.sh ${{ github.event.inputs.name }})
          echo "release_id=$RELEASE_ID" >> $GITHUB_OUTPUT

      - name: Create lightweight tag
        run: |
          git tag ${{ github.event.inputs.name }}
          git push origin ${{ github.event.inputs.name }}

    outputs:
      release_id: ${{ steps.create-draft.outputs.release_id }}

  publish-release:
    name: Publish release
    needs: [create-draft, run-unit-tests, run-e2e-tests, run-e2e-upgrade-tests, run-stress-tests]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Publish release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./scripts/publish_release.sh ${{ needs.create-draft.outputs.release_id }}
