name: "Upload release logs as assets"
run-name: Upload release ${{ github.event.release.tag_name }} logs as assets
on:
  release:
    types: [released]

permissions:
  contents: write

jobs:
  upload-release-logs:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Wait for release workflow to finish if in progress
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Checking if a release workflow is in progress..."
          WORKFLOWS=$(gh workflow list --json name --template '{{range .}}{{.name}}{{"\n"}}{{end}}' | awk '/Create.*release/')
          while true; do
            IN_PROGRESS=""
            WORKFLOWS_ARRAY=()
            while IFS= read -r line; do
              WORKFLOWS_ARRAY+=("$line")
            done <<< "$WORKFLOWS"
            for WF in "${WORKFLOWS_ARRAY[@]}"; do
              echo "Checking workflow: $WF"
              STATUS=$(gh run list --workflow "$WF" --json status -L 1 --jq '.[] | select(.status == "in_progress") | .status')
              if [ -n "$STATUS" ]; then
                IN_PROGRESS=1
                break
              fi
            done
            if [ -z "$IN_PROGRESS" ]; then
              echo "No release workflow in progress."
              break
            fi
            echo "A release workflow is in progress. Waiting 30 seconds..."
            sleep 30
          done

      - name: Download logs from all attempts
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./scripts/download_workflow_logs.sh "${WORKFLOWS_ARRAY[@]}" "Create release ${{ github.event.release.tag_name }}"

      - name: Upload logs as release assets
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for file in logs_attempt_*.zip; do
            echo "Uploading $file to release ${{ github.event.release.tag_name }}..."
            gh release upload ${{ github.event.release.tag_name }} "$file" --repo "$GITHUB_REPOSITORY" --clobber
          done
      
      - name: Notify slack channel about failure
        if: ${{ !success() && env.SLACK_BOT_TOKEN != ''}}
        uses: slackapi/slack-github-action@v1.24.0
        with:
            channel-id: 'kyma-gopher-private-alerts'
            slack-message: "Logs uploading to release failed. Check the details at: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        env:
            SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}